// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Not(in=sel[1], out=notSel1);

    And16(
        a[0..15]=a[0..15], 
        b[0]=notSel1, b[1]=notSel1, b[2]=notSel1, b[3]=notSel1, 
        b[4]=notSel1, b[5]=notSel1, b[6]=notSel1, b[7]=notSel1, 
        b[8]=notSel1, b[9]=notSel1, b[10]=notSel1, b[11]=notSel1, 
        b[12]=notSel1, b[13]=notSel1, b[14]=notSel1, b[15]=notSel1, 
        out[0..15]=inA
    );
    And16(
        a[0..15]=b[0..15],
        b[0]=notSel1, b[1]=notSel1, b[2]=notSel1, b[3]=notSel1, 
        b[4]=notSel1, b[5]=notSel1, b[6]=notSel1, b[7]=notSel1, 
        b[8]=notSel1, b[9]=notSel1, b[10]=notSel1, b[11]=notSel1, 
        b[12]=notSel1, b[13]=notSel1, b[14]=notSel1, b[15]=notSel1, 
        out[0..15]=inB
    );
    Mux16(a[0..15]=inA, b[0..15]=inB, sel=sel[0], out[0..15]=outA);
    
    And16(
        a[0..15]=c[0..15], 
        b[0]=sel[1], b[1]=sel[1], b[2]=sel[1], b[3]=sel[1], 
        b[4]=sel[1], b[5]=sel[1], b[6]=sel[1], b[7]=sel[1], 
        b[8]=sel[1], b[9]=sel[1], b[10]=sel[1], b[11]=sel[1], 
        b[12]=sel[1], b[13]=sel[1], b[14]=sel[1], b[15]=sel[1],
        out[0..15]=inC
    );
    And16(
        a[0..15]=d[0..15],
        b[0]=sel[1], b[1]=sel[1], b[2]=sel[1], b[3]=sel[1], 
        b[4]=sel[1], b[5]=sel[1], b[6]=sel[1], b[7]=sel[1], 
        b[8]=sel[1], b[9]=sel[1], b[10]=sel[1], b[11]=sel[1], 
        b[12]=sel[1], b[13]=sel[1], b[14]=sel[1], b[15]=sel[1],
        out[0..15]=inD
    );
    Mux16(a[0..15]=inC, b[0..15]=inD, sel=sel[0], out[0..15]=outB);
    
    Or16(a[0..15]=outA, b[0..15]=outB, out[0..15]=out[0..15]);
}