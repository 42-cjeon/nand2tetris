<class>class<className><identifier>SquareGame</identifier></className><symbol>{</symbol><classVarDec>field<type><className><identifier>Square</identifier></className></type><varName><identifier>square</identifier></varName><symbol>;</symbol></classVarDec><classVarDec>field<type><className><identifier>int</identifier></className></type><varName><identifier>direction</identifier></varName><symbol>;</symbol></classVarDec><subroutineDec>constructor<type><className><identifier>SquareGame</identifier></className></type><subroutineName><identifier>new</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol><subroutineBody><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>square</identifier></varName><symbol>=</symbol><expression><term><subroutineCall><propertyAccess><className><identifier>Square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>new</identifier></subroutineName><symbol>(</symbol><expressionList><expression><term><integerConstant>0</integerConstant></term></expression><expressionRepeat><symbol>,</symbol><expression><term><integerConstant>0</integerConstant></term></expression></expressionRepeat><expressionRepeat><symbol>,</symbol><expression><term><integerConstant>30</integerConstant></term></expression></expressionRepeat></expressionList><symbol>)</symbol></subroutineCall></term></expression><symbol>;</symbol></letStatement></statement><statement><letStatement>let<varName><identifier>direction</identifier></varName><symbol>=</symbol><expression><term><integerConstant>0</integerConstant></term></expression><symbol>;</symbol></letStatement></statement><statement><returnStatement>return<expression><term><keywordConstant><keyword>this</keyword></keywordConstant></term></expression><symbol>;</symbol></returnStatement></statement></statements><symbol>}</symbol></subroutineBody></subroutineDec><subroutineDec>methodvoid<subroutineName><identifier>dispose</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol><subroutineBody><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>dispose</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>Memory</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>deAlloc</identifier></subroutineName><symbol>(</symbol><expressionList><expression><term><keywordConstant><keyword>this</keyword></keywordConstant></term></expression></expressionList><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement><statement><returnStatement>return<symbol>;</symbol></returnStatement></statement></statements><symbol>}</symbol></subroutineBody></subroutineDec><subroutineDec>methodvoid<subroutineName><identifier>moveSquare</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol><subroutineBody><symbol>{</symbol><statements><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>direction</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>1</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>moveUp</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>direction</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>2</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>moveDown</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>direction</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>3</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>moveLeft</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>direction</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>4</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>moveRight</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>Sys</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>wait</identifier></subroutineName><symbol>(</symbol><expressionList><expression><term><integerConstant>5</integerConstant></term></expression></expressionList><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement><statement><returnStatement>return<symbol>;</symbol></returnStatement></statement></statements><symbol>}</symbol></subroutineBody></subroutineDec><subroutineDec>methodvoid<subroutineName><identifier>run</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol><subroutineBody><symbol>{</symbol><varDec>var<type><className><identifier>char</identifier></className></type><varName><identifier>key</identifier></varName><symbol>;</symbol></varDec><varDec>var<type><className><identifier>boolean</identifier></className></type><varName><identifier>exit</identifier></varName><symbol>;</symbol></varDec><statements><statement><letStatement>let<varName><identifier>exit</identifier></varName><symbol>=</symbol><expression><term><keywordConstant>false</keywordConstant></term></expression><symbol>;</symbol></letStatement></statement><statement><whileStatement>while<symbol>(</symbol><expression><term><unaryOperatedTerm><unaryOp><symbol>~</symbol></unaryOp><term><varName><identifier>exit</identifier></varName></term></unaryOperatedTerm></term></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><whileStatement>while<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>0</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>key</identifier></varName><symbol>=</symbol><expression><term><subroutineCall><propertyAccess><className><identifier>Keyboard</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>keyPressed</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall></term></expression><symbol>;</symbol></letStatement></statement><statement><doStatement>do<subroutineCall><subroutineName><identifier>moveSquare</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></whileStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>81</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>exit</identifier></varName><symbol>=</symbol><expression><term><keywordConstant>true</keywordConstant></term></expression><symbol>;</symbol></letStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>90</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>decSize</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>88</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><doStatement>do<subroutineCall><propertyAccess><className><identifier>square</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>incSize</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>131</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>direction</identifier></varName><symbol>=</symbol><expression><term><integerConstant>1</integerConstant></term></expression><symbol>;</symbol></letStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>133</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>direction</identifier></varName><symbol>=</symbol><expression><term><integerConstant>2</integerConstant></term></expression><symbol>;</symbol></letStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>130</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>direction</identifier></varName><symbol>=</symbol><expression><term><integerConstant>3</integerConstant></term></expression><symbol>;</symbol></letStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><ifStatement>if<symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>132</integerConstant></term></operatedTerm></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>direction</identifier></varName><symbol>=</symbol><expression><term><integerConstant>4</integerConstant></term></expression><symbol>;</symbol></letStatement></statement></statements><symbol>}</symbol></ifStatement></statement><statement><whileStatement>while<symbol>(</symbol><expression><term><unaryOperatedTerm><unaryOp><symbol>~</symbol></unaryOp><term><parenthesizedExpression><symbol>(</symbol><expression><term><varName><identifier>key</identifier></varName></term><operatedTerm><op><symbol>=</symbol></op><term><integerConstant>0</integerConstant></term></operatedTerm></expression><symbol>)</symbol></parenthesizedExpression></term></unaryOperatedTerm></term></expression><symbol>)</symbol><symbol>{</symbol><statements><statement><letStatement>let<varName><identifier>key</identifier></varName><symbol>=</symbol><expression><term><subroutineCall><propertyAccess><className><identifier>Keyboard</identifier></className><symbol>.</symbol></propertyAccess><subroutineName><identifier>keyPressed</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall></term></expression><symbol>;</symbol></letStatement></statement><statement><doStatement>do<subroutineCall><subroutineName><identifier>moveSquare</identifier></subroutineName><symbol>(</symbol><symbol>)</symbol></subroutineCall><symbol>;</symbol></doStatement></statement></statements><symbol>}</symbol></whileStatement></statement></statements><symbol>}</symbol></whileStatement></statement><statement><returnStatement>return<symbol>;</symbol></returnStatement></statement></statements><symbol>}</symbol></subroutineBody></subroutineDec><symbol>}</symbol></class>